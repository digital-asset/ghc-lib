name: ghc-lib-runhaskell-ghc-9.10.1
on:
  push:
jobs:
  ghc-9-10:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
    steps:
      - uses: actions/checkout@v2
      - uses: haskell-actions/setup@v2
        with:
          enable-stack: true
          stack-version: '2.15.7'
      - name: Configure PATH (unix)
        run: |-
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$HOME/.cabal/bin" >> $GITHUB_PATH
        shell: bash
        if: matrix.os == 'ubuntu' || matrix.os == 'macos'
      - name: Configure PATH (windows)
        run: |-
          echo "C:\\Users\\runneradmin\\AppData\\Roaming\\local\\bin" >> $GITHUB_PATH
          echo "C:\\Users\\runneradmin\\AppData\\Roaming\\cabal\\bin" >> $GITHUB_PATH
        shell: bash
        if: matrix.os == 'windows'
      - name: Print diagnostic PATH
        shell: bash
        run: echo "$PATH"
      # - name: Upgrade stack from git
      #   shell: bash
      #   run: stack upgrade --git
      - name: Print diagnostic stack
        shell: bash
        run: |-
          echo "wich stack: $(which stack)"
          echo "stack-version: $(stack --version)"
      - name: Install build tools
        run: brew install automake
        if: matrix.os == 'macos'
      - name: Configure
        shell: bash
        # e.g. Don't recursively delete '.stack-work' (`stack clean --full`)
        run: echo "GHCLIB_AZURE='1'" >> $GITHUB_ENV
      - name: Run CI.hs
        shell: bash
        run: stack runhaskell --stack-yaml stack-exact.yaml --resolver ghc-9.10.1 --package extra --package optparse-applicative CI.hs -- --stack-yaml stack-exact.yaml --resolver ghc-9.10.1 --ghc-flavor "ghc-9.10.1"
